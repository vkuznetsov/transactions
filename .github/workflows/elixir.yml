name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  MIX_ENV: test    

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        elixir: [1.11.2]
        otp: [23.0.1]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: ${{ matrix.elixir }} 
        otp-version: ${{ matrix.otp }} 
    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
        
    - name: Install dependencies
      run: mix deps.get
      
    - name: Compile 
      run: mix compile --warnings-as-errors
      
    - name: Check style
      run: mix credo
      
    - name: Retrieve PLT Cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt  
        
    - name: Check types
      run: mix dialyzer --no-check --halt-exit-status
      
    - name: Run tests
      run: mix test
